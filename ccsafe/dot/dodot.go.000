// Copyright 2016 Andreas Pannewitz. All rights reserved.
// Use of this source code is governed by a BSD-style
// license that can be found in the LICENSE file.

package dot

import (
	"do/dot"
)

// use package "path/filepath"

// filepath.Glob(path)
func (d *Dot) AddFilePathGlob() *Dot {

	_ = dot.DoFilePathGlob(d, d.Root())

	return d
}

// filepath.Walk(path, WalkFunc)
func (d *Dot) AddFileInfoWalk() *Dot {

	_ = dot.DoInfoWalk(d, d.Root())

	return d
}

// use package "io/ioutil"

// func ioutil.ReadFile(filename string) ([]byte, error)
func (d *Dot) DoReadFile() *Dot {

	_ = dot.ExecTagReadFile(d)

	return d
}

// func ioutil.WriteFile(filename string, data []byte, perm os.FileMode) error
func (d *Dot) DoWriteFile() *Dot {

	_ = dot.ExecWriteFileFromValue(d)

	return d
}

// func ioutil.ReadDir(dirname string) ([]os.FileInfo, error)
func (d *Dot) AddReadAllDirs() *Dot {

	_ = dot.ExecReadAllDirs(d)

	return d
}

/* TODO - maybe
func TempDir(dir, prefix string) (name string, err error)
func TempFile(dir, prefix string) (f *os.File, err error)
*/
